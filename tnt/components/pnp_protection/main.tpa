INCLUDE ~%lib_dir%/tobex.tpa~

ACTION_DEFINE_ASSOCIATIVE_ARRAY protection_opcodes BEGIN
  OPCODE_ac_vs_damage_type_mod => 1
  OPCODE_save_vs_death_mod => 1
  OPCODE_save_vs_wands_mod => 1
  OPCODE_save_vs_petrification_polymorph_mod => 1
  OPCODE_save_vs_breath_weapons_mod => 1
  OPCODE_save_vs_spells_mod => 1
END

ACTION_DEFINE_ASSOCIATIVE_ARRAY protection_power BEGIN
  amul14 => 1
  clck01 => 1
  clck02 => 2
  clck31 => 2
  ring06 => 1
  ring07 => 2
  ring25 => 1
  ring41 => 3

  // thalantyr item upgrade
  thclck01 => 1 // Improved Cloak of Non-Detection +1
  thclck03 => 2 // Improved Cloak of Balduran +2
  thring01 => 1 // Ring of Free Action +1
  thring02 => 2 // RoFA +2

  // bg1npc
  x#iamul => 1 // birthday present from Imoen = custom AoP+1

  // bgttweak
  ring25b => 2 // Upgraded Koveras' Ring of Protection
END

ACTION_PHP_EACH protection_power AS item => power BEGIN
  COPY_EXISTING ~%item%.itm~ override
    PHP_EACH protection_opcodes AS opcode => int BEGIN
      LPF DELETE_EFFECT INT_VAR match_opcode = EVAL ~%%opcode%%~ END
    END
    FOR (i=1;i<=power;++i) BEGIN
      PHP_EACH protection_opcodes AS opcode => int BEGIN
        LPF ADD_ITEM_EQEFFECT
          INT_VAR
            opcode = EVAL ~%%opcode%%~
            target = TARGET_FX_self
            timing = TIMING_while_equipped
            parameter1 = 1 // amount
            savingthrow = FLAG_SAVINGTHROW_limit_effect_stacking_Ex
            special = (effect_stacking_id_base + i) // opcodes not overlapping with Chaos Shield, so no problem
            probability1 = (100 + i)  // this is necessary to prevent engine from confusing which effects belong to which items. Without it, equipping RoP+1 and +2 and then re-equipping RoP+1 twice results in lost AC.
        END
      END
    END
  BUT_ONLY IF_EXISTS
END


// same as above, but without AC
ACTION_DEFINE_ASSOCIATIVE_ARRAY protection_opcodes_saves BEGIN
  OPCODE_save_vs_death_mod => 1
  OPCODE_save_vs_wands_mod => 1
  OPCODE_save_vs_petrification_polymorph_mod => 1
  OPCODE_save_vs_breath_weapons_mod => 1
  OPCODE_save_vs_spells_mod => 1
END
ACTION_DEFINE_ASSOCIATIVE_ARRAY protection_power_saves BEGIN
  // thalantyr item upgrade
  thamul01 => 1 // Improved Shield Amulet: sets AC instead of giving a bonus
END
ACTION_PHP_EACH protection_power_saves AS item => power BEGIN
  COPY_EXISTING ~%item%.itm~ override
    PHP_EACH protection_opcodes_saves AS opcode => int BEGIN
      LPF DELETE_EFFECT INT_VAR match_opcode = EVAL ~%%opcode%%~ END
    END
    FOR (i=1;i<=power;++i) BEGIN
      PHP_EACH protection_opcodes_saves AS opcode => int BEGIN
        LPF ADD_ITEM_EQEFFECT
          INT_VAR
            opcode = EVAL ~%%opcode%%~
            target = TARGET_FX_self
            timing = TIMING_while_equipped
            parameter1 = 1 // amount
            savingthrow = FLAG_SAVINGTHROW_limit_effect_stacking_Ex
            special = (effect_stacking_id_base + i) // opcodes not overlapping with Chaos Shield, so no problem
            probability1 = (100 + i)  // this is necessary to prevent engine from confusing which effects belong to which items. Without it, equipping RoP+1 and +2 and then re-equipping RoP+1 twice results in lost AC.
        END
      END
    END
  BUT_ONLY IF_EXISTS
END
// end same

COPY_EXISTING ~itemexcl.2da~ override
  READ_2DA_ENTRIES_NOW itemexcl 2
  FOR (i=1;i<itemexcl;++i) BEGIN
    READ_2DA_ENTRY_FORMER itemexcl i 0 item
    TO_LOWER item
    PATCH_IF NOT VARIABLE_IS_SET $protection_power(~%item%~) BEGIN
      SET $items(~%item%~) = 1
    END
  END
BUT_ONLY

COPY ~%comp_dir%/itemexcl.2da~ override

ACTION_PHP_EACH items AS item => int BEGIN
  COPY_EXISTING ~%item%.itm~ override
    LPF INFER_ARMOR_ENCHANTMENT RET enchantment END
    LPF unstack_armor_bonus INT_VAR bonus = enchantment stacking_id_base = effect_stacking_id_base END
  BUT_ONLY
END
