OUTER_SPRINT comp_dir ~%components%/hassle_free_ammo~

COPY - ~%comp_dir%/items.2da~ ~.../tnt-inlined/hassle_free_ammo/items.2da~
  READ_2DA_ENTRIES_NOW items 5

OUTER_FOR (i=0;i<items;i+=1) BEGIN
  COPY ~%comp_dir%/g_%item%.itm~ ~override~
    READ_2DA_ENTRY_FORMER items i 0 item
    READ_2DA_ENTRY_FORMER items i 1 name
    READ_2DA_ENTRY_FORMER items i 2 desc
    READ_2DA_ENTRY_FORMER items i 3 damagebonus
    READ_2DA_ENTRY_FORMER items i 4 speed

    SAY NAME1 ( AT name )
    SAY NAME2 ( AT name )
    WRITE_SHORT ITM_lore_to_id 0 //lore
    SAY UNIDENTIFIED_DESC ( AT desc )
    WRITE_LONG DESC "-1" //identified desc
    WRITE_LONG ITM_price 300 //price
    WRITE_LONG ITM_enchantment 0 //enchantment

    //minor patching to ensure consistency
    GET_OFFSET_ARRAY ab_array ITM_V10_HEADERS
    PHP_EACH ab_array AS int => ab_off BEGIN
      //thac0 bonus
      WRITE_SHORT (ab_off + ITM_HEADER_thac0_bonus) 0

      //add strength bonus to axe, remove from others
      PATCH_IF (~%item%~ STRING_EQUAL ~axe~) BEGIN
        WRITE_LONG (ab_off + ITM_HEADER_flags) (THIS BAND FLAG_HEADER_add_strength_bonus)
      END ELSE BEGIN
        WRITE_LONG (ab_off + ITM_HEADER_flags) (THIS BAND BNOT FLAG_HEADER_add_strength_bonus)
      END

      //damage bonus
      WRITE_SHORT (ab_off + ITM_HEADER_damage_bonus) damagebonus
      //speed
      WRITE_BYTE (ab_off + ITM_HEADER_speed) speed
    END

  BUT_ONLY
END


//add to Taerom and Ribald
ACTION_FOR_EACH store IN taerum ribald BEGIN
  ACTION_IF FILE_EXISTS_IN_GAME ~%store%.sto~ BEGIN
    COPY_EXISTING ~%store%.sto~ ~override~
      ADD_STORE_ITEM + "g_axe" #0 #0 #0 ~IDENTIFIED~ #10
      ADD_STORE_ITEM + "g_dagg" #0 #0 #0 ~IDENTIFIED~ #10
      ADD_STORE_ITEM + "g_dart" #0 #0 #0 ~IDENTIFIED~ #10
      ADD_STORE_ITEM + "g_arrow" #0 #0 #0 ~IDENTIFIED~ #10
      ADD_STORE_ITEM + "g_bolt" #0 #0 #0 ~IDENTIFIED~ #10
      ADD_STORE_ITEM + "g_bull" #0 #0 #0 ~IDENTIFIED~ #10
    BUT_ONLY
  END
END


//remove weight and maximize stacks
ACTION_DEFINE_ARRAY item_type BEGIN
  ITM_TYPE_arrows
  ITM_TYPE_bullets
  ITM_TYPE_dagger
  ITM_TYPE_hammer
  ITM_TYPE_dart
  ITM_TYPE_axe
  ITM_TYPE_bolts
END

COPY_EXISTING_REGEXP GLOB ~^.+\.itm$~ ~override~
  READ_SHORT ITM_stack_amount stack
  PATCH_IF stack > 1 BEGIN
    READ_SHORT ITM_type type
    match = 0
    PATCH_FOR_EACH itype IN item_type BEGIN
      PATCH_IF type == EVAL ~%%itype%%~ BEGIN
        GET_OFFSET_ARRAY h_array ITM_V10_HEADERS
        PHP_EACH h_array AS int => h_off BEGIN
          READ_BYTE h_off attack_type
          PATCH_IF attack_type == ITM_ATTACK_TYPE_ranged BEGIN
            match = 1 //ranged weapon which stacks
          END
        END
      END
    END
    PATCH_IF match == 1 BEGIN
      WRITE_SHORT ITM_stack_amount 65535
      WRITE_LONG ITM_weight 0
    END
  END
BUT_ONLY
