/**
 * Returns a list of duplicated items in the store
 * @ret {list}
 */
DEFINE_PATCH_FUNCTION LIST_STORE_DUPES
    RET_ARRAY instance2
BEGIN
    SPRINT log_prefix "LIST_STORE_DUPES: %SOURCE_FILE% -"
    GET_OFFSET_ARRAY items STO_V10_ITEMS_SOLD

    // count items
    PHP_EACH items AS int => off BEGIN
        READ_ASCII off name
        TO_LOWER name
        PATCH_IF VARIABLE_IS_SET $instance("%name%") BEGIN
            count = $instance("%name%") + 1
            SET $instance("%name%") = count
        END ELSE BEGIN
            SET $instance("%name%") = 1
        END
    END

    // list dupes
    PHP_EACH instance AS name => count BEGIN
        PATCH_IF count > 1 BEGIN
            PATCH_PRINT "%log_prefix% %name% - %count% instances"
            SET $instance2("%name%") = count
        END
    END
END

DEFINE_PATCH_FUNCTION GET_STORE_ZEROED_ITEMS
    // RET_ARRAY instance2
BEGIN
    SPRINT log_prefix "GET_STORE_ZEROED_ITEMS: %SOURCE_FILE% -"
    GET_OFFSET_ARRAY items STO_V10_ITEMS_SOLD

    // count items
    PHP_EACH items AS int => off BEGIN
        READ_LONG (off + STO_ITEM_amount) amount
        PATCH_IF amount == 0 BEGIN
            READ_LONG (off + STO_ITEM_infinite) infinite
            PATCH_IF infinite == 0 BEGIN
                READ_ASCII off name
                PATCH_PRINT "%log_prefix% %name% - amount is 0"
            END
        END
    END
END



/**
 * Returns total amount of an item in the store (counting dupes)
 * @arg {resref} item
 * @ret {int} total - if any of the instances has infinite flag set, this equals to -1
 */
DEFINE_PATCH_FUNCTION GET_STORE_DUPE_TOTAL
    STR_VAR item = ""
    RET total
BEGIN
    SPRINT log_prefix "GET_STORE_DUPE_TOTAL: %SOURCE_FILE% -"
    PATCH_IF item STR_EQ "" BEGIN
        PATCH_FAIL ~%log_prefix% empty item arg~
    END
    total = 0
    GET_OFFSET_ARRAY items STO_V10_ITEMS_SOLD
    PHP_EACH items AS int => off BEGIN
        PATCH_IF total != "-1" BEGIN
            READ_ASCII off name
            PATCH_IF "%name%" STR_EQ "%item%" BEGIN
                READ_LONG (off + STO_ITEM_infinite) infinite
                PATCH_IF infinite == 1 BEGIN
                    total = "-1"
                END ELSE BEGIN
                    READ_LONG (off + STO_ITEM_amount) current_amount
                    total += current_amount
                END
            END
        END
    END
    PATCH_PRINT "%log_prefix% %item% - total=%total%"
END


/**
 * Set the first instance of `item` in the store to have `total` amount.
 * And delete other instances.
 * @arg {int} total - total amount. Can be `-1` to indicate infinite.
 * @arg {resref} item - item name
 */
DEFINE_PATCH_FUNCTION REMOVE_STORE_DUPES
    INT_VAR total = "0"
    STR_VAR item = ""
BEGIN
    SPRINT log_prefix "REMOVE_STORE_DUPES: %SOURCE_FILE% -"
    PATCH_IF total == 0 BEGIN
        PATCH_FAIL ~%log_prefix% empty total arg~
    END
    PATCH_IF item STR_EQ "" BEGIN
        PATCH_FAIL ~%log_prefix% empty item arg~
    END

    STO_ITEM_size = 0x1c
    first_found = 0
    deleted = 0

    READ_LONG STO_items_count items_cnt
    READ_LONG STO_items_offset items_off

    FOR (i=0; i<items_cnt; ++i) BEGIN
        off = items_off + i * STO_ITEM_size

        READ_ASCII off name
        PATCH_IF "%name%" STR_EQ "%item%" BEGIN
            PATCH_IF first_found == 0 BEGIN
                first_found = 1
                // infinite
                PATCH_IF total == "-1" BEGIN
                    WRITE_LONG (off + STO_ITEM_infinite) 1
                END ELSE BEGIN  // finite
                    WRITE_LONG (off + STO_ITEM_amount) total
                END
            END ELSE BEGIN  // already found first, this is a dupe
                DELETE_BYTES off STO_ITEM_size
                deleted += 1
                i -= 1
                items_cnt -= 1
            END
        END
    END

    PATCH_IF deleted > 0 BEGIN
        WRITE_LONG STO_items_count (THIS - deleted)
        LPF ~__A7_UPDATE_OFFSETS~
        INT_VAR
          value = 0 - (STO_ITEM_size * deleted)
          skip_offset = STO_items_offset
        END
    END ELSE BEGIN
        PATCH_FAIL "%log_prefix% %item% dupes not found"
    END

END


ACTION_DEFINE_ASSOCIATIVE_ARRAY replacements BEGIN
    // bucklers
    shld09 => shld08
    shld10 => shld08

    // small shields
    shld11 => shld01
    shld12 => shld01
    shld99 => shld01

    // medium shields
    shld13 => shld03
    shld14 => shld03

    // large shields
    shld15 => shld05
    shld16 => shld05
    shld18 => shld05
END

COPY_EXISTING_REGEXP GLOB ~^.+\.sto$~ ~override~
    // delete useless items
    REMOVE_STORE_ITEM belt01 boot06 brac05 brac12

    LPF GET_STORE_ZEROED_ITEMS END

    // replace identical items
    PHP_EACH replacements AS old => new BEGIN
        LPF REPLACE_STORE_ITEM_MATCH STR_VAR match_item = "%old%" new_item = "%new%" END
    END

    // dedupe
    CLEAR_ARRAY dupes
    LPF LIST_STORE_DUPES RET_ARRAY dupes = instance2 END
    PHP_EACH dupes AS item => count BEGIN
        LPF GET_STORE_DUPE_TOTAL STR_VAR item RET total END
        LPF REMOVE_STORE_DUPES INT_VAR total STR_VAR item END
    END

BUT_ONLY
